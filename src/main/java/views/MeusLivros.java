package views;

import java.awt.Component;
import java.util.List;
import java.util.Vector;

import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import cell.TableActionCellEditor;
import cell.TableActionCellRender;
import cell.TableActionEvent;
import controllers.LivroController;
import models.Livro;



public class MeusLivros extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;
	/**
     * Creates new form MeusLivros
     */
    public MeusLivros() {
    	try {
    		LivroController controller = new LivroController();
    		List<Livro> livros = controller.buscarLivros();
            initComponents(livros);
    	} catch (Exception e ) {
    		
    	}
        TableActionEvent event = new TableActionEvent() {
            @Override
            public void onEdit(int row) {
            	DefaultTableModel model = (DefaultTableModel) table.getModel();
            	int id = (int) model.getDataVector().elementAt(row).elementAt(0);
            	EditarLivro editarLivro = new EditarLivro(id);
            	editarLivro.setVisible(true);
            }

            @Override
            public void onDelete(int row) {
                if (table.isEditing()) {
                    table.getCellEditor().stopCellEditing();
                }
                
                try {
                	LivroController controller = new LivroController();
                	DefaultTableModel model = (DefaultTableModel) table.getModel();
                	int id = (int) model.getDataVector().elementAt(row).elementAt(0);
                	controller.deletarLivro(id);
                    model.removeRow(row);
                }
                catch (Exception e ) {
                	//eXCEPTION
                }
             
            }

            @Override
            public void onView(int row) {
                //System.out.println("Detalhes : " + row);
            	DefaultTableModel model = (DefaultTableModel) table.getModel();
            	int id = (int) model.getDataVector().elementAt(row).elementAt(0);
            	VerLivro verLivro = new VerLivro(id);
            	verLivro.setVisible(true);
            }
        };
        table.getColumnModel().getColumn(3).setCellRenderer(new TableActionCellRender());
        table.getColumnModel().getColumn(3).setCellEditor(new TableActionCellEditor(event));
        table.getColumnModel().getColumn(0).setCellRenderer(new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable jtable, Object o, boolean bln, boolean bln1, int i, int i1) {
                setHorizontalAlignment(SwingConstants.RIGHT);
                return super.getTableCellRendererComponent(jtable, o, bln, bln1, i, i1);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents(List<Livro> livros) {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
       

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        
Object[][] tableValues = new Object[livros.size()][4];
        
        for(int i = 0; i< livros.size(); i++) {
        	Livro livro = livros.get(i);
        	int id  = livro.getId();
        	String titulo = livro.getTitulo();
        	String autor = livro.getAutor();
        	tableValues[i][0] = id;
        	tableValues[i][1] = titulo;
        	tableValues[i][2] = autor;
        	tableValues[i][3] = null;
        }
        
        System.out.println(tableValues);
        
       
        table.setModel(new javax.swing.table.DefaultTableModel(
            tableValues,
            new String [] {
                "ID", "Título", "Autor", "Ação"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setRowHeight(40);
        table.setSelectionBackground(new java.awt.Color(56, 138, 112));
        jScrollPane1.setViewportView(table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 818, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 529, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MeusLivros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MeusLivros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MeusLivros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MeusLivros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MeusLivros().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
